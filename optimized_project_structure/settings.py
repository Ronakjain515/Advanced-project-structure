"""
Django settings for optimized_project_structure project.

Generated by 'django-admin startproject' using Django 5.0.3.

For more information on this file, see
https://docs.djangoproject.com/en/5.0/topics/settings/

For the full list of settings and their values, see
https://docs.djangoproject.com/en/5.0/ref/settings/
"""

import os
from pathlib import Path
from datetime import timedelta
from dotenv import load_dotenv

load_dotenv()
# Build paths inside the project like this: BASE_DIR / 'subdir'.
BASE_DIR = Path(__file__).resolve().parent.parent


# Quick-start development settings - unsuitable for production
# See https://docs.djangoproject.com/en/5.0/howto/deployment/checklist/

# SECURITY WARNING: keep the secret key used in production secret!
SECRET_KEY = 'django-insecure-msbc6f@#&#g12k)eo*fm-mzcg+$if^teeh%4xgs_3#krc1@-g('

# SECURITY WARNING: don't run with debug turned on in production!
DEBUG = True

ALLOWED_HOSTS = ["*"]

CORS_ORIGIN_ALLOW_ALL = True

# Application definition

INSTALLED_APPS = [
    'django.contrib.admin',
    'django.contrib.auth',
    'django.contrib.contenttypes',
    'django.contrib.sessions',
    'django.contrib.messages',
    'django.contrib.staticfiles',

    'rest_framework',
    'django_filters',
    'corsheaders',

    'users',
    'common',
    'courses',



]

MIDDLEWARE = [
    'django.middleware.security.SecurityMiddleware',
    'django.contrib.sessions.middleware.SessionMiddleware',
    'django.middleware.common.CommonMiddleware',
    'django.middleware.csrf.CsrfViewMiddleware',
    'django.contrib.auth.middleware.AuthenticationMiddleware',
    'django.contrib.messages.middleware.MessageMiddleware',
    'django.middleware.clickjacking.XFrameOptionsMiddleware',
]

ROOT_URLCONF = 'optimized_project_structure.urls'
AUTH_USER_MODEL = "users.CustomUser"

TEMPLATES = [
    {
        'BACKEND': 'django.template.backends.django.DjangoTemplates',
        'DIRS': [],
        'APP_DIRS': True,
        'OPTIONS': {
            'context_processors': [
                'django.template.context_processors.debug',
                'django.template.context_processors.request',
                'django.contrib.auth.context_processors.auth',
                'django.contrib.messages.context_processors.messages',
            ],
        },
    },
]


REST_FRAMEWORK = {
    'DEFAULT_AUTHENTIACTION_CLASSES': (
        'rest_framework_simplejwt.authentication.JWTAuthentication',
    ),
    'DEFAULT_FILTER_BACKENDS':
        ('django_filters.rest_framework.DjangoFilterBackend',),
    'DEFAULT_PERMISSION_CLASSES': (
        'rest_framework.permissions.IsAuthenticated',
    ),
    'TEST_REQUEST_DEFAULT_FORMAT': 'json',
    'EXCEPTION_HANDLER': 'utilities.utils.custom_exception_handler',
}


# Database
# https://docs.djangoproject.com/en/5.0/ref/settings/#databases
print(os.getenv("DB_NAME"))
DATABASES = {
    'default': {
        'ENGINE': 'django.db.backends.mysql',
        'NAME': os.getenv("DB_NAME"),
        'USER': os.getenv("DB_USER"),
        'PASSWORD': os.getenv("DB_PASSWORD"),
        'PORT': os.getenv("DB_PORT"),
        'HOST': os.getenv("DB_HOST")
    }
}

WSGI_APPLICATION = 'optimized_project_structure.wsgi.application'

# Password validation
# https://docs.djangoproject.com/en/5.0/ref/settings/#auth-password-validators

AUTH_PASSWORD_VALIDATORS = [
    {
        'NAME': 'django.contrib.auth.password_validation.UserAttributeSimilarityValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.MinimumLengthValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.CommonPasswordValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.NumericPasswordValidator',
    },
]


# Internationalization
# https://docs.djangoproject.com/en/5.0/topics/i18n/

LANGUAGE_CODE = 'en-us'

TIME_ZONE = 'UTC'

USE_I18N = True

USE_TZ = True


# Static files (CSS, JavaScript, Images)
# https://docs.djangoproject.com/en/5.0/howto/static-files/

STATIC_URL = 'static/'

# Default primary key field type
# https://docs.djangoproject.com/en/5.0/ref/settings/#default-auto-field

DEFAULT_AUTO_FIELD = 'django.db.models.BigAutoField'

SIMPLE_JWT = {
    'ACCESS_TOKEN_LIFETIME': timedelta(weeks=1),
    'REFRESH_TOKEN_LIFETIME': timedelta(weeks=6),
    'ROTATE_REFRESH_TOKENS': False,
    'BLACKLIST_AFTER_ROTATION': True,
    'UPDATE_LAST_LOGIN': True,

    'ALGORITHM': 'HS256',
    'SIGNING_KEY': SECRET_KEY,
    'VERIFYING_KEY': None,

    'AUTH_HEADER_TYPES': ('Bearer',),
    'USER_ID_FIELD': 'id',
    'USER_ID_CLAIM': 'user_id',

    'AUTH_TOKEN_CLASSES': ('rest_framework_simplejwt.tokens.AccessToken',),
    'TOKEN_TYPE_CLAIM': 'token_type',
}

LOGGING_DIR = os.path.join(BASE_DIR, 'log')
LOGGING = {
   'version': 1,
   'disable_existing_loggers': False,
   'formatters': {
       'standard': {
           'format': '%(asctime)s [%(levelname)s] %(name)s: %(message)s'
       },
   },
   'handlers': {
       'debug_logs': {
           'level': 'DEBUG',
           'class': 'logging.handlers.RotatingFileHandler',
           'filename': os.path.join(LOGGING_DIR, 'debug_logs/debug_logs.log'),
           'backupCount': 10,  # keep at most 10 log files.
           'maxBytes': 5242880,  # 5*1024*1024 bytes (5MB)
           'formatter': 'standard',
       },
       'warning': {
           'level': 'WARNING',
           'class': 'logging.handlers.RotatingFileHandler',
           'filename': os.path.join(LOGGING_DIR, 'warning_logs/warning.log'),
           'backupCount': 10,  # keep at most 10 log files
           'maxBytes': 5242880,  # 5*1024*1024 bytes (5MB)
           'formatter': 'standard',
       },
       'error': {
           'level': 'ERROR',
           'class': 'logging.handlers.RotatingFileHandler',
           'filename': os.path.join(LOGGING_DIR, 'error_logs/error.log'),
           'backupCount': 10,  # keep at most 10 log files.
           'maxBytes': 5242880,  # 5*1024*1024 bytes (5MB)
           'formatter': 'standard',
       },
       'info': {
           'level': 'INFO',
           'class': 'logging.handlers.RotatingFileHandler',
           'filename': os.path.join(LOGGING_DIR, 'info_logs/info.log'),
           'backupCount': 10,  # keep at most 10 log files
           'maxBytes': 5242880,  # 5*1024*1024 bytes (5MB)
           'formatter': 'standard',
       },
       'critical_logs': {
           'level': 'CRITICAL',
           'class': 'logging.handlers.RotatingFileHandler',
           'filename': os.path.join(LOGGING_DIR, 'critical_logs/critical.log'),
           'backupCount': 10,  # keep at most 10 log files.
           'maxBytes': 5242880,  # 5*1024*1024 bytes (5MB)
           'formatter': 'standard',
       },
   },
   'loggers': {
       'django': {
           'handlers': ['debug_logs', 'warning', 'error', 'info', 'critical_logs'],
           'level': 'DEBUG',
           'propagate': True,
       },
   },
}
